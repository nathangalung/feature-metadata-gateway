version: '3.8'

services:
  feature-metadata-gateway:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: feature-metadata-gateway
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    environment:
      - PYTHONPATH=/app
      - UV_SYSTEM_PYTHON=1
      - FEATURE_METADATA_FILE=/app/data/feature_metadata.json
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - feature-gateway-network

  nginx:
    image: nginx:alpine
    container_name: feature-gateway-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - feature-metadata-gateway
    restart: unless-stopped
    networks:
      - feature-gateway-network

  prometheus:
    image: prom/prometheus:latest
    container_name: feature-gateway-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - feature-gateway-network

networks:
  feature-gateway-network:
    driver: bridge

volumes:
  prometheus_data:
  feature_data:
  logs_data: