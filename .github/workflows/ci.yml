name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  PYTHON_VERSION: "3.13"

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"
    
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        uv sync --all-extras --dev
    
    - name: Lint with ruff
      run: |
        uv run ruff check app/ tests/
        uv run ruff format --check app/ tests/
    
    - name: Type check with mypy
      run: |
        uv run mypy app/
    
    - name: Run tests with pytest
      run: |
        uv run pytest tests/ -v --cov=app --cov-report=xml --cov-report=term-missing --cov-fail-under=99
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
    
    - name: Set up Python
      run: uv python install ${{ env.PYTHON_VERSION }}
    
    - name: Install dependencies
      run: uv sync --all-extras --dev
    
    - name: Run security checks
      run: |
        uv run bandit -r app/
        uv run safety check

  docker:
    runs-on: ubuntu-latest
    needs: [test, security]
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      run: |
        docker build -t feature-metadata-gateway:test .
    
    - name: Test Docker container
      run: |
        docker run -d --name test-container -p 8000:8000 feature-metadata-gateway:test
        sleep 30
        curl -f http://localhost:8000/health || exit 1
        docker stop test-container
        docker rm test-container

  integration:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
    
    - name: Set up Python
      run: uv python install ${{ env.PYTHON_VERSION }}
    
    - name: Install dependencies
      run: uv sync --all-extras --dev
    
    - name: Run integration tests
      run: |
        uv run pytest tests/test_endpoints.py tests/test_workflow_integration.py -v